<!--
    
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<div id="contain">  
  <div id="article">
    <h4>Recent message flows archives (sorted by date)</h4>
    <ul id="exchanges">
      
    </ul>
  </div>
  <script type="text/javascript">
     var timer = null;

     function  addLiElement(where, l, text) {
     	       
	       var place = document.getElementById(where);	
	       var li = document.createElement("li");
	       li.innerHTML = "<a href='" + l + ".html'>" + text  + "</a>";
  	       place.appendChild(li);    
     }

     function removeAllElement(from) {
     	      
	      var place = document.getElementById(from);
	      while(place.childNodes.length > 0) {
              place.removeChild(place.childNodes[0]);
     	      }
     }

     function myRefresh() {
     	      // if myRefresh is called manually, clear the timer
              if (timer) clearTimeout(timer);
	      
	        //exhanges by date
	      dojo.xhrGet({
		url: 'http://localhost:8080/servicemix/message_flows.1.json',
		handleAs: 'json',
		load: function(response, ioArgs) {
		      //response is the Object/Array		     
		   
		     removeAllElement("exchanges");

		     for (var i in response) {
		     
			if ((i == "sling:resourceType") || 
			   (i == "jcr:created") ||
			   (i == "jcr:primaryType")) {
				continue;
			}
			   
			var ad = response["sling:resourceType"] + "/" + i;
			addLiElement("exchanges", ad, i);
		     }
		}    
		});

	       //message_flows
	      dojo.xhrGet({
		url: 'http://localhost:8080/servicemix/message_flows.2.json',
		handleAs: 'json',
		load: function(response, ioArgs) {
		      //response is the Object/Array		     
		   
		     removeAllElement("message_flows");

		     for (var i in response) {
		     
			if ((i == "sling:resourceType") || 
			   (i == "jcr:created") ||
			   (i == "jcr:primaryType")) {
				continue;
			}

			// for each date			  
			for (var j in response[i]) {

			    if ((j == "sling:resourceType") || 
			       (j == "jcr:created") ||
			       (j == "created") ||
			       (j == "jcr:primaryType")) {
				  continue;
			    }
			    
			    var ad2 = "content/" + response[i]["sling:resourceType"] + "/" + i  + "/" + j;
			    addLiElement("message_flows", ad2, response[i][j]["correlationId"]);
			    
			}
		     }
		}    
		});

		//exchanges
	      dojo.xhrGet({
		url: 'http://localhost:8080/servicemix/message_flows.3.json',
		handleAs: 'json',
		load: function(response, ioArgs) {
		      //response is the Object/Array
		     
		     removeAllElement("failed");
		     removeAllElement("pending");

		     for (var i in response) {
		     
			if ((i == "sling:resourceType") || 
			   (i == "jcr:created") ||
			   (i == "jcr:primaryType")) {
				continue;
			}

			// for each date			  
			for (var j in response[i]) {

			    if ((j == "sling:resourceType") || 
			       (j == "jcr:created") ||
			       (j == "created") ||
			       (j == "jcr:primaryType")) {
				  continue;
			    }
			    
			    // for each messsage flow
			    for (var k in response[i][j]) {
			    
				if ((k == "sling:resourceType") || 
			 	   (k == "jcr:created") ||
				   (k == "correlationId") ||
  				   (k == "created") ||
			   	   (k == "jcr:primaryType")) {
				   continue;
				}
			    	
				if (response[i][j][k]["exchangeStatus"] == "Error"){
				   
				   var ad3 = "content/" + response[i]["sling:resourceType"] + "/" + i  + "/" + j
				   + "/" + k;
				   addLiElement("failed", ad3, response[i][j][k]["exchangeId"]);
				
				} 
				else if (response[i][j][k]["exchangeStatus"] == "Active"){

				    var a4d = "content/" + response[i]["sling:resourceType"] + "/" + i  + "/" + j
				    + "/" + k;
				    addLiElement("pending", ad4, response[i][j][k]["exchangeId"]);			

				}
			    }  
			}
		     }
		    
		}    
		});
		
			
              // keep on keepin' on, 
              timer = setTimeout("myRefresh()",500);
     }

     dojo.addOnLoad(function(){
             // START the 'recursion' via dojoAddOnLoad
            timer = setTimeout("myRefresh()",500);
   	 });
    
   </script>

</div>